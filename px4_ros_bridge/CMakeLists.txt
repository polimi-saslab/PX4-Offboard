cmake_minimum_required(VERSION 3.8)
project(px4_ros_bridge)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(px4_msgs REQUIRED)
find_package(Boost REQUIRED COMPONENTS system filesystem)

add_executable(odom_broadcaster src/odom_broadcaster.cpp)
add_executable(px4_ros_bridge src/px4_ros_bridge.cpp)
add_executable(telemetry_bag_recorder src/telemetry_bag_recorder.cpp)

target_include_directories(odom_broadcaster PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(odom_broadcaster PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

set(my_dep
  "rclcpp"
  "std_msgs"
  "geometry_msgs"
  "sensor_msgs"
  "tf2_ros"
  "tf2_geometry_msgs"
  "px4_msgs"
  "Boost"
)

ament_target_dependencies(odom_broadcaster PUBLIC ${my_dep})
ament_target_dependencies(px4_ros_bridge PUBLIC ${my_dep})
ament_target_dependencies(telemetry_bag_recorder PUBLIC ${my_dep})

install(TARGETS
  odom_broadcaster
  px4_ros_bridge
  telemetry_bag_recorder
  DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY launch
  DESTINATION share/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
